{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rasol\\\\Documents\\\\Bank-Argent\\\\Argent-Banque-Front-End\\\\src\\\\pages\\\\Profile\\\\Profile.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { userProfile } from '../../redux/actions/user.actions.jsx';\nimport User from '../../components/User.jsx';\nimport Account from '../../components/Account.jsx';\nimport AccountCardData from '../../data/AccountCardData.json';\n\n/* User profile page */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserProfile() {\n  _s();\n  const token = useSelector(state => state.auth.token);\n  const dispatch = useDispatch();\n\n  /* Updates user data on profile page from state redux */\n\n  const userData = useSelector(state => state.user.userData);\n  /* Manages the appearance of the username modification form */\n  const [display, setDisplay] = useState(true);\n  /* Get username */\n  const [userName, setUserName] = useState('');\n  /* Handle error message */\n  const [errorMessage, setErrorMessage] = useState('');\n\n  /* Asynchronous function that retrieves user data and updates it with useEffect */\n  useEffect(() => {\n    if (token) {\n      const userData = async () => {\n        try {\n          const response = await fetch('http://localhost:3001/api/v1/user/profile', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': `Bearer ${token}`\n            }\n          });\n          if (response.ok) {\n            const data = await response.json();\n            /* \r\n                Checking that the query response is indeed retrieved\r\n                console.log(data) \r\n            */\n            const userData = {\n              createdAt: data.body.createdAt,\n              updatedAt: data.body.updatedAt,\n              id: data.body.id,\n              email: data.body.email,\n              firstname: data.body.firstName,\n              lastname: data.body.lastName,\n              username: data.body.userName\n            };\n            /* Return user data in redux state */\n            dispatch(userProfile(userData));\n          } else {\n            console.log(\"error while retrieving profile\");\n          }\n        } catch (error) {\n          console.error(error);\n        }\n        ;\n      };\n      userData();\n    }\n  }, [dispatch, token]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"header\",\n    children: display ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Welcome back\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), userData.firstname, \" \", userData.lastname]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"edit-button\",\n        onClick: () => setDisplay(!display),\n        children: \"Edit Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Edit user info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"edit-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"User name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"username\",\n            defaultValue: userData.username,\n            onChange: event => setUserName(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"edit-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"firstname\",\n            children: \"First name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"firstname\",\n            defaultValue: userData.firstname,\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"edit-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"lastname\",\n            children: \"Last name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"lastname\",\n            defaultValue: userData.lastname,\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"edit-username-button\",\n            onClick: handleSubmitUsername,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"edit-username-button\",\n            onClick: () => setDisplay(!display),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n\n/* Updates user data on profile page from state redux */\n_s(UserProfile, \"beR8SQNTIAmaPMdjug4Q15Sdnng=\", false, function () {\n  return [useSelector, useDispatch, useSelector];\n});\n_c = UserProfile;\nconst token = useSelector(state => state.auth.token);\nconst userData = useSelector(state => state.user.userData);\n/* Manages the appearance of the username modification form */\nconst [display, setDisplay] = useState(true);\n/* Get username */\nconst [userName, setUserName] = useState('');\n/* Handle error message */\nconst [errorMessage, setErrorMessage] = useState('');\nconst dispatch = useDispatch();\n\n/* Asynchronous username update function */\nconst handleSubmitUsername = async event => {\n  event.preventDefault();\n  if (!isValidName(userName)) {\n    setErrorMessage(\"Invalid username\");\n    return;\n  } else {\n    setErrorMessage(\"\");\n  }\n  try {\n    const response = await fetch('http://localhost:3001/api/v1/user/profile', {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n      body: JSON.stringify({\n        userName\n      })\n    });\n    if (response.ok) {\n      const data = await response.json();\n      const username = data.body.userName;\n      /* \r\n          Checking that the query response is indeed retrieved\r\n          console.log(data) \r\n      */\n      dispatch(updateUsername(username));\n      setDisplay(!display);\n    } else {\n      console.log(\"Invalid Fields\");\n    }\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport default UserProfile;\nvar _c;\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"names":["React","useEffect","useSelector","useDispatch","userProfile","User","Account","AccountCardData","jsxDEV","_jsxDEV","UserProfile","_s","token","state","auth","dispatch","userData","user","display","setDisplay","useState","userName","setUserName","errorMessage","setErrorMessage","response","fetch","method","headers","ok","data","json","createdAt","body","updatedAt","id","email","firstname","firstName","lastname","lastName","username","console","log","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","htmlFor","type","defaultValue","onChange","event","target","value","disabled","handleSubmitUsername","_c","preventDefault","isValidName","JSON","stringify","updateUsername","$RefreshReg$"],"sources":["C:/Users/rasol/Documents/Bank-Argent/Argent-Banque-Front-End/src/pages/Profile/Profile.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { userProfile } from '../../redux/actions/user.actions.jsx';\r\nimport User from '../../components/User.jsx';\r\nimport Account from '../../components/Account.jsx';\r\nimport AccountCardData from '../../data/AccountCardData.json';\r\n\r\n\r\n/* User profile page */\r\nfunction UserProfile () {\r\n    const token = useSelector((state) => state.auth.token);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n        /* Updates user data on profile page from state redux */\r\n       \r\n        const userData = useSelector((state) => state.user.userData);\r\n        /* Manages the appearance of the username modification form */\r\n        const [display, setDisplay] = useState(true);\r\n        /* Get username */\r\n        const [userName, setUserName] = useState('');\r\n        /* Handle error message */\r\n        const [errorMessage, setErrorMessage] = useState('');\r\n    \r\n\r\n  \r\n    /* Asynchronous function that retrieves user data and updates it with useEffect */\r\n    useEffect(() => {\r\n        if (token) {\r\n            const userData = async () => {\r\n                try {\r\n                    const response = await fetch('http://localhost:3001/api/v1/user/profile', {\r\n                        method: 'POST',\r\n                        headers: {\r\n                            'Content-Type': 'application/json',\r\n                            'Authorization': `Bearer ${token}`,\r\n                        },\r\n                    });\r\n                    if (response.ok) {\r\n                        const data = await response.json();\r\n                        /* \r\n                            Checking that the query response is indeed retrieved\r\n                            console.log(data) \r\n                        */\r\n                        const userData = {\r\n                            createdAt: data.body.createdAt,\r\n                            updatedAt: data.body.updatedAt,\r\n                            id: data.body.id,\r\n                            email: data.body.email,\r\n                            firstname: data.body.firstName,\r\n                            lastname: data.body.lastName,\r\n                            username: data.body.userName\r\n                        }\r\n                        /* Return user data in redux state */\r\n                        dispatch(userProfile(userData));\r\n                    } else {\r\n                        console.log(\"error while retrieving profile\");\r\n                    }\r\n                } catch (error) {\r\n                    console.error(error);\r\n                };\r\n            };\r\n            userData();\r\n        }\r\n    }, [dispatch, token]);\r\n\r\n    return (\r\n        <div className=\"header\">\r\n        { display ? \r\n            <div>\r\n                <h2>Welcome back \r\n                    <br />\r\n                    {userData.firstname} {userData.lastname} \r\n                </h2>\r\n                <button className=\"edit-button\" onClick={() => setDisplay(!display)}>Edit Name</button>\r\n            </div>\r\n            :\r\n            <div>\r\n                <h2>Edit user info</h2>\r\n                <form>\r\n                    <div className=\"edit-input\">\r\n                        <label htmlFor=\"username\">User name:</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"username\"\r\n                            defaultValue={userData.username}\r\n                            onChange={(event) => setUserName(event.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div className=\"edit-input\">\r\n                        <label htmlFor=\"firstname\">First name:</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"firstname\" \r\n                            defaultValue={userData.firstname}\r\n                            disabled={true}\r\n                        />\r\n                    </div>\r\n                    <div className=\"edit-input\">\r\n                        <label htmlFor=\"lastname\">Last name:</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"lastname\" \r\n                            defaultValue={userData.lastname}\r\n                            disabled={true}\r\n                        />\r\n                    </div>\r\n                    <div className=\"buttons\">\r\n                        <button className=\"edit-username-button\" onClick={handleSubmitUsername}>Save</button>\r\n                        <button className=\"edit-username-button\" onClick={() => setDisplay(!display)}>Cancel</button>\r\n                    </div>\r\n                    {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n                </form>\r\n            </div>\r\n        }\r\n    </div>\r\n    )\r\n}\r\n\r\n    /* Updates user data on profile page from state redux */\r\n    const token = useSelector((state) => state.auth.token);\r\n    const userData = useSelector((state) => state.user.userData);\r\n    /* Manages the appearance of the username modification form */\r\n    const [display, setDisplay] = useState(true);\r\n    /* Get username */\r\n    const [userName, setUserName] = useState('');\r\n    /* Handle error message */\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n\r\n    const dispatch = useDispatch();\r\n\r\n   /* Asynchronous username update function */\r\n    const handleSubmitUsername = async (event) => {\r\n        event.preventDefault();\r\n        if (!isValidName(userName)) {\r\n            setErrorMessage(\"Invalid username\");\r\n            return;\r\n        } else {\r\n            setErrorMessage(\"\");\r\n        }\r\n        try {\r\n            const response = await fetch('http://localhost:3001/api/v1/user/profile', {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${token}`,\r\n                },\r\n                body: JSON.stringify({userName}),\r\n            });\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                const username = data.body.userName;\r\n                /* \r\n                    Checking that the query response is indeed retrieved\r\n                    console.log(data) \r\n                */\r\n                dispatch(updateUsername(username));\r\n                setDisplay(!display);\r\n            } else {\r\n                console.log(\"Invalid Fields\")\r\n            }\r\n\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\nexport default UserProfile"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}