{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rasol\\\\Documents\\\\Bank-Argent\\\\Argent-Banque-Front-End\\\\src\\\\pages\\\\Profile\\\\Profile.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { userProfile } from '../../redux/actions/user.actions.jsx';\nimport User from '../../components/User.jsx';\nimport Account from '../../components/Account.jsx';\nimport AccountCardData from '../../data/AccountCardData.json';\nimport axios from 'axios';\n/* User profile page */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserProfile() {\n  _s();\n  const dispatch = useDispatch();\n  const token = useSelector(state => state.auth.token);\n  /* Asynchronous function that retrieves user data and updates it with useEffect */\n  useEffect(() => {\n    if (token) {\n      const userData = async () => {\n        try {\n          const response = await fetch('http://localhost:3001/api/v1/user/profile', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': `Bearer ${token}`\n            }\n          });\n          if (response.ok) {\n            const data = await response.json();\n\n            //Checking that the query response is indeed retrieved\n            console.log(data);\n            const userData = {\n              createdAt: data.body.createdAt,\n              updatedAt: data.body.updatedAt,\n              id: data.body.id,\n              email: data.body.email,\n              firstname: data.body.firstName,\n              lastname: data.body.lastName,\n              username: data.body.userName\n            };\n            /* Return user data in redux state */\n            dispatch(userProfile(userData));\n          } else {\n            console.log(\"error while retrieving profile\");\n          }\n        } catch (error) {\n          console.error(error);\n        }\n        ;\n      };\n      userData();\n    }\n  }, [dispatch, token]);\n  useEffect(() => {\n    dispatch(fetchUserData(token));\n  }, [dispatch, token]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-page\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"bg-dark\",\n      children: [/*#__PURE__*/_jsxDEV(User, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), AccountCardData.map(data =>\n      /*#__PURE__*/\n      /* Return account component */\n      _jsxDEV(Account, {\n        title: data.title,\n        amount: data.amount,\n        description: data.description\n      }, data.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n_s(UserProfile, \"KgfBbmFunCOiXH0xsvd3PYusdIQ=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = UserProfile;\nconst fetchUserData = createAsyncThunk('user/getUserData', async token => {\n  const res = await axios({\n    method: 'post',\n    url: 'http://localhost:3001/api/v1/user/profile',\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return res.data.body;\n});\nconst getUserToken = createAsyncThunk('auth/getUserToken', async (credentials, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.post(BASE_URL, credentials);\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.code);\n  }\n});\nexport default UserProfile;\nvar _c;\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"names":["React","useEffect","useSelector","useDispatch","userProfile","User","Account","AccountCardData","axios","jsxDEV","_jsxDEV","UserProfile","_s","dispatch","token","state","auth","userData","response","fetch","method","headers","ok","data","json","console","log","createdAt","body","updatedAt","id","email","firstname","firstName","lastname","lastName","username","userName","error","fetchUserData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","title","amount","description","_c","createAsyncThunk","res","url","Authorization","getUserToken","credentials","rejectWithValue","post","BASE_URL","code","$RefreshReg$"],"sources":["C:/Users/rasol/Documents/Bank-Argent/Argent-Banque-Front-End/src/pages/Profile/Profile.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { userProfile } from '../../redux/actions/user.actions.jsx';\r\nimport User from '../../components/User.jsx';\r\nimport Account from '../../components/Account.jsx';\r\nimport AccountCardData from '../../data/AccountCardData.json';\r\nimport axios from 'axios'\r\n/* User profile page */\r\nfunction UserProfile () {\r\n\r\n    const dispatch = useDispatch();\r\n    const token = useSelector((state) => state.auth.token);\r\n    /* Asynchronous function that retrieves user data and updates it with useEffect */\r\n    useEffect(() => {\r\n        if (token) {\r\n            const userData = async () => {\r\n                try {\r\n                    const response = await fetch('http://localhost:3001/api/v1/user/profile', {\r\n                        method: 'POST',\r\n                        headers: {\r\n                            'Content-Type': 'application/json',\r\n                            'Authorization': `Bearer ${token}`,\r\n                        },\r\n                    });\r\n                    if (response.ok) {\r\n                        const data = await response.json();\r\n                         \r\n                            //Checking that the query response is indeed retrieved\r\n                            console.log(data) \r\n                        \r\n                        const userData = {\r\n                            createdAt: data.body.createdAt,\r\n                            updatedAt: data.body.updatedAt,\r\n                            id: data.body.id,\r\n                            email: data.body.email,\r\n                            firstname: data.body.firstName,\r\n                            lastname: data.body.lastName,\r\n                            username: data.body.userName\r\n                        }\r\n                        /* Return user data in redux state */\r\n                        dispatch(userProfile(userData));\r\n                    } else {\r\n                        console.log(\"error while retrieving profile\");\r\n                    }\r\n                } catch (error) {\r\n                    console.error(error);\r\n                };\r\n            };\r\n            userData();\r\n        }\r\n    }, [dispatch, token]);\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchUserData(token))\r\n    }, [dispatch, token])\r\n\r\n    return (\r\n        <div className='profile-page'>\r\n            <main className='bg-dark'>\r\n                {/* Return user componant */}\r\n                < User />\r\n                {/* Return items from json file with map */}\r\n                {AccountCardData.map((data) => (\r\n                    /* Return account component */\r\n                    <Account \r\n                        key={data.id}\r\n                        title={data.title}\r\n                        amount={data.amount}\r\n                        description={data.description}\r\n                    />\r\n                ))}\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst fetchUserData = createAsyncThunk(\r\n    'user/getUserData',\r\n    async (token) => {\r\n        const res = await axios({\r\n            method: 'post',\r\n            url: 'http://localhost:3001/api/v1/user/profile',\r\n            headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        return res.data.body\r\n    }\r\n)\r\n\r\nconst getUserToken = createAsyncThunk(\r\n    'auth/getUserToken',\r\n    async (credentials, { rejectWithValue }) => {\r\n        try {\r\n            const response = await axios.post(BASE_URL, credentials)\r\n            return response.data\r\n        } catch (error) {\r\n            return rejectWithValue(error.code)\r\n        }\r\n    }\r\n)\r\n\r\nexport default UserProfile"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}